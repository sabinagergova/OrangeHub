<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20130530</FitNesseVersion>
  <rootPath>SeleniumTask</rootPath>
    <result>
    <counts>
      <right>0</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>1</exceptions>
    </counts>
    <runTimeInMillis>18465</runTimeInMillis>
    <content>&lt;div class="toc1"&gt;
	&lt;div class="contents"&gt;
		&lt;b&gt;Contents:&lt;/b&gt;
		&lt;ul/&gt;&lt;ul/&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;br/&gt;&lt;span class="meta"&gt;variable defined: TEST_SYSTEM=slim&lt;/span&gt;
&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;import&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;span class="pass"&gt;com.skrill.interns.SeleniumSabina&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td colspan="3"&gt;&lt;span class="pass"&gt;fitnesse test&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;email&lt;/td&gt;
		&lt;td&gt;password&lt;/td&gt;
		&lt;td&gt;register user?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="exception closed"&gt;
		&lt;td class="error"&gt;&lt;a href="mailto:sabina.intern.test.fitnesse1@sun-fish.com"&gt;sabina.intern.test.fitnesse1@sun-fish.com&lt;/a&gt;&lt;/td&gt;
		&lt;td class="error"&gt;sabina.intern.test.fitnesse1&lt;/td&gt;
		&lt;td class="error"&gt;true&lt;/td&gt;
	&lt;/tr&gt;&lt;tr class="exception-detail closed-detail"&gt;&lt;td colspan="3"&gt;&lt;pre&gt;__EXCEPTION__:java.lang.IllegalArgumentException: n must be positive
	at java.util.Random.nextInt(Unknown Source) [rt.jar:1.6.0_45]
	at com.skrill.interns.SeleniumSabina.RegisterUser.setDropDown(RegisterUser.java:148) [file:/C:/Binny/WorkSpaceEclipse/team-orange/SeleniumSabina/target/classes/]
	at com.skrill.interns.SeleniumSabina.RegisterUser.register(RegisterUser.java:81) [file:/C:/Binny/WorkSpaceEclipse/team-orange/SeleniumSabina/target/classes/]
	at com.skrill.interns.SeleniumSabina.FitnesseTest.registerUser(FitnesseTest.java:9) [file:/C:/Binny/WorkSpaceEclipse/team-orange/SeleniumSabina/target/classes/]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_45]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.6.0_45]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.6.0_45]
	at java.lang.reflect.Method.invoke(Unknown Source) [rt.jar:1.6.0_45]
	at fitnesse.slim.fixtureInteraction.DefaultInteraction.methodInvoke(DefaultInteraction.java:16) [fitnesse-standalone.jar]
	at fitnesse.slim.MethodExecutor.callMethod(MethodExecutor.java:43) [fitnesse-standalone.jar]
	at fitnesse.slim.MethodExecutor.invokeMethod(MethodExecutor.java:30) [fitnesse-standalone.jar]
	at fitnesse.slim.MethodExecutor.findAndInvoke(MethodExecutor.java:52) [fitnesse-standalone.jar]
	at fitnesse.slim.FixtureMethodExecutor.execute(FixtureMethodExecutor.java:20) [fitnesse-standalone.jar]
	at fitnesse.slim.StatementExecutor.getMethodExecutionResult(StatementExecutor.java:120) [fitnesse-standalone.jar]
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:98) [fitnesse-standalone.jar]
	at fitnesse.slim.instructions.CallInstruction.executeInternal(CallInstruction.java:35) [fitnesse-standalone.jar]
	at fitnesse.slim.instructions.Instruction.execute(Instruction.java:30) [fitnesse-standalone.jar]
	at fitnesse.slim.ListExecutor$Executive.executeStatement(ListExecutor.java:50) [fitnesse-standalone.jar]
	at fitnesse.slim.ListExecutor$Executive.executeStatements(ListExecutor.java:44) [fitnesse-standalone.jar]
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:84) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:107) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:94) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:68) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:54) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.serve(SlimServer.java:40) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.accept(SlimService.java:112) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.startWithFactory(SlimService.java:37) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.main(SlimService.java:24) [fitnesse-standalone.jar]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
</content>
    <relativePageName>SeleniumTask</relativePageName>
    
    
    
    <instructions>
            <instructionResult>
        <instruction>{id='import_0_0', instruction='import', path='com.skrill.interns.SeleniumSabina'}</instruction>
        <slimResult>pass(com.skrill.interns.SeleniumSabina)</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>import_0_0</instructionId>
                    <col>0</col>
                              <row>1</row>
                    <type>ImportExpectation</type>
                                        <evaluationMessage>com.skrill.interns.SeleniumSabina</evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction>{id='decisionTable_1_0', instruction='make', instanceName='decisionTable_1', className='FitnesseTest', args=[]}</instruction>
        <slimResult>pass(fitnesse test)</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>decisionTable_1_0</instructionId>
                    <col>0</col>
                              <row>0</row>
                    <type>ConstructionExpectation</type>
                                        <evaluationMessage>fitnesse test</evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction>{id='decisionTable_1_4', instruction='call', instanceName='decisionTable_1', methodName='setEmail', args=[&lt;a href="mailto:sabina.intern.test.fitnesse1@sun-fish.com"&gt;sabina.intern.test.fitnesse1@sun-fish.com&lt;/a&gt;]}</instruction>
        <slimResult></slimResult>
                <expectation>
                    <instructionId>decisionTable_1_4</instructionId>
                    <col>0</col>
                              <row>2</row>
                    <type>VoidReturnExpectation</type>
                                      </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction>{id='decisionTable_1_5', instruction='call', instanceName='decisionTable_1', methodName='setPassword', args=[sabina.intern.test.fitnesse1]}</instruction>
        <slimResult></slimResult>
                <expectation>
                    <instructionId>decisionTable_1_5</instructionId>
                    <col>1</col>
                              <row>2</row>
                    <type>VoidReturnExpectation</type>
                                      </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction>{id='decisionTable_1_7', instruction='call', instanceName='decisionTable_1', methodName='registerUser', args=[]}</instruction>
        <slimResult>null</slimResult>
                <expectation>
                    <status>error</status>
                    <instructionId>decisionTable_1_7</instructionId>
                              <type>ReturnedValueExpectation</type>
                                      </expectation>
        
      </instructionResult>
      
    </instructions>
    
  </result>
  
    <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>0</totalRunTimeInMillis>
  
</testResults>

